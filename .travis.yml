sudo: false
language: cpp
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - g++-4.8
    - g++-4.8-multilib
    - gcc-multilib
os:
- linux
#- osx
env:
  global:
    secure: kGvWDBAibMWkQO1bFCfiaezH69+eK5T5EyftLJkXYFM0586c/O+VryjhnaXve4g//ZD1/H9+X6sOX0505FeOijqHAVXusFyi7UpB3ZQxWCxMKiDiln1AuMFTInl925QsurVTJsXnyNT7NJkCKstfRqerUIgPOT2Wg6WrlEyKjgwOZ+y/Zx1qrfBvlWEdmPNZRvBKgSRf6K6GakhLeRRBidEvMCHWtHW5vWGBW3ZT1kl75lM074LvoLEFMqRRVvOj9Ps6rXOibG6n82SKt/wMOMbMUdeKegWhAZtjw4yTNmCxxXrmsmhkyQ1Uecki1vbRFQrRFxUVYrsXW6p1piu69hOTyV4fDoZLuDcz7OVx7fTFkoc5Wv/JHCGkCiNWxTp/kbFRLDr45QcH/CXRaSpzlrHTgU3sZGfe0YtT5EYX9eFuNEUPLuWZRk44pLZcCywtE/3Hn2KA9mOT9Nl5vYesmEGJc/Y9vR5JGRF0NByGphCYrRzBrgXxKEiPG2/KpbgPuyQgvTvzPiJJJ8+dd7iT80jg5V+WVswYuL0jKvlWmxSOy/zvXVYLcXM7JTK0aLgqOCBcxs93dDAILJ95qK8bHtnYV0JAPnTFU03O0CIfy9/gDGJ4rV9nO9C2SPI1AQhLYlbb6O5JwiOPN2EQLKOXq3eN8n21s8wfg6fAQP7oFDY=
  matrix:
  - TRAVIS_NODE_VERSION="6" ARCH="x86_64"
matrix:
  exclude:
  - os: osx
    env: TRAVIS_NODE_VERSION="0.10" ARCH="x86"
  - os: osx
    env: TRAVIS_NODE_VERSION="0.12" ARCH="x86"
  - os: osx
    env: TRAVIS_NODE_VERSION="4" ARCH="x86"
  - os: osx
    env: TRAVIS_NODE_VERSION="5" ARCH="x86"
before_install:
- rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm
  && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm
  install $TRAVIS_NODE_VERSION
- BASE_URL=$(node -p "v=parseInt(process.versions.node),(v>=1&&v<4?'https://iojs.org/dist/':'https://nodejs.org/dist/')+process.version")
- X86_FILE=$(node -p "v=parseInt(process.versions.node),(v>=1&&v<4?'iojs':'node')+'-'+process.version+'-'+process.platform+'-x86'")
- if [[ "$ARCH" == "x86" ]]; then wget $BASE_URL/$X86_FILE.tar.gz; tar -xf $X86_FILE.tar.gz;
  export PATH=$X86_FILE/bin:$PATH; fi
- npm install -g node-gyp node-pre-gyp node-pre-gyp-github
- npm --version
- node-gyp --version
- node-pre-gyp --version
- node-pre-gyp-github --help
- if [[ $TRAVIS_OS_NAME == "linux" ]]; then export CXX=g++-4.8; fi
- "$CXX --version"
- COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
- if [[ $TRAVIS_OS_NAME == "osx" ]]; then export TEST_PORT='/dev/cu.serial1'; fi
- PUBLISH_BINARY=true
- echo $TRAVIS_BRANCH
- echo `git describe --tags --always HEAD`
- echo $COMMIT_MESSAGE
- if [[ $TRAVIS_BRANCH == `git describe --tags --always HEAD` ]]; then PUBLISH_BINARY=true;
  fi;
- echo "Publishing native platform Binary Package? ->" $PUBLISH_BINARY
- if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then PUBLISH_BINARY=true;
  fi;
- echo "Publishing native platform Binary Package? ->" $PUBLISH_BINARY
install:
- npm install --build-from-source
script:
- node ./
#- npm test
- if [[ $PUBLISH_BINARY == true ]]; then node-pre-gyp package; fi;
- if [[ $PUBLISH_BINARY == true ]]; then node-pre-gyp-github publish --release; fi;
- node-pre-gyp clean
- node-gyp clean
- if [[ $PUBLISH_BINARY == true ]]; then npm install --fallback-to-build=false; fi;
